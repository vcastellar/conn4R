% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/miniMax.R
\name{minimax}
\alias{minimax}
\title{algoritmo minimax}
\usage{
minimax(
  tablero,
  profundidad,
  maximizandoIA,
  alpha = -Inf,
  beta = Inf,
  env = NULL
)
}
\arguments{
\item{tablero}{a matrix representing the state of the game board}

\item{profundidad}{un entero que fija la profundidad del árbol de jugadas a analizar}

\item{maximizandoIA}{Booleano. TRUE significa que se maximiza la puntuación de la IA
FALSE se minimiza la puntuación del jugador humano}

\item{alpha}{parámetro de la poda alpha-beta. Por defecto -Inf}

\item{beta}{parámetro de la poda alpha-beta. Por defecto +Inf}
}
\value{
returns a list with the following contents
\itemize{
\item{puntuacion}: puntuación optenida al evaluar la posición al realizar la 'jugada'
\item{jugada}: jugada elegida por el algoritmo
}
}
\description{
función que mediante un algoritmo mini-max la IA decide cuál es su mejor
jugada dada una cierta posición del tablero
}
\details{
\itemize{
\item{If the game is over is TRUE}: result can be "WIN HUMAN", "WIN IA" or "DRAW’.
\item{If the game is over is TRUE}: result is NA
}
la poda alpha-beta reduce drásticamente el número de nodos que se evaluan:
a profundidad 5, con tres movimientos realizados en el tablero, el algoritmo minimax calcula:
\itemize{
\item con poda alpha-beta: 4.677 nodos
\item sin poda alpha-beta: 19.607 nodos
}
}
\examples{
tablero <- crear_posicion_aleatoria(10)
visualizar_tablero(tablero)
system.time({
  kk <- minimax(tablero = tablero, profundidad = 9, maximizandoIA = TRUE)
})
kk$env$contador
kk$puntuacion
kk$jugada
}
